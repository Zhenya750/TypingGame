Module app
Method void Enemy::doCmp(QString &Letter)

Test №1
Goal: test a usual reaction to Enemy
Type: positive
Input:  	new Enemy("abcde");
          count = 0;
          
          for i in 'a'..'e' doCmp(i);
          
Expected: count = 5

Test №2
Goal: test a usual reaction to Enemy
Type: positive
Input:  	new Enemy("abzdz");
          count = 0;
          
          for i in 'a'..'e' doCmp(i);
          
Expected: count = 2


Method getRand(int minLeft, int left, int right, int maxRight)

Test №1
Goal: test a right reaction to bad arguments
Type: negative
Input:  	int v[7];

          v[0] = getRand(0, -1,  0, 10);
          v[1] = getRand(0,  0, -1, 10);
          v[2] = getRand(0, -1, -2, 10);
          v[3] = getRand(0, -2, -1, 10);
          v[4] = getRand(0,  5,  3, 10);
          v[5] = getRand(0,  5,  6,  2);
          v[6] = getRand(10, 5,  6,  2);

          int res = for i in 0..6 sum of v[i];
          
Expected: res = 0

Test №2
Goal: test a reaction when minLeft = left = right = 0 (generating a number fron one interval [0...N])
Type: positive
Input:  	for j in 0..600 v=getRand(0,0,0,j)
          
Expected: v in 0..j

Test №4
Goal: test a reaction when left = right = 0 (generating a number fron one interval[M..N])
Type: positive
Input:  	for i in 0..9 v=getRand(i,0,0,i+5)
          
Expected: v in i..(i+5)
